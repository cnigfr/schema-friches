---
title: "Met les exemples en conformité avec le schéma"
output: html_notebook
---

```{r}
library(tidyverse)
library(jsonlite)
library(glue)
```
On lit le schéma :
```{r}
s <- read_json("../../schema.json")
fields <- sapply(s$fields, function(elt) elt$name)
```

Fonction de correction des fichiers :
```{r}
correctFile <- function(f, fields) {
  df_l <- list()
  # On parcourt chaque champ du schéma pour voir s'il existe ou non dans la donnée
  # S'il n'existe pas, on le rajoute
  for(field in fields) {
    if(!(field %in% names(f))) {
      message(">> ", field, " n'existe pas. On ne remplit à NA")
      # Ajout de la colonne avec valeur NA
      df_l[[field]] <- NA
    } else {
      # On prend la colonne précédente
      df_l[[field]] <- f[[field]]
    }
    
    # Rajoute les 0 le cas échéant à COLL_INSEE
    if(field == "COLL_INSEE") {
      df_l[[field]] <- f[[field]] %>% str_pad(5, side = "left", pad = "0")
    }
  }
  
  # On convertit la liste en data frame
  df <- data.frame(df_l)
  
  return(df)
}
```

Correction de l'exemple principal :
```{r}
df1 <- read.csv("../../exemple-valide.csv", encoding = "UTF-8")
df2 <- correctFile(df1, fields)
```

Pour restaurer le précédent exemple-valide.csv, on fait `git checkout master exemple-valide.csv`

Tests
```{r}
nrow(df1) == nrow(df2)
```

Export du CSV exemple :
```{r}
write.csv(df2, "../../exemple-valide.csv", fileEncoding = "UTF-8", row.names = F, na = "")
```


On lit les fichiers du répertoire :
```{r}
l <- list.files("../../exemples", "*.csv", full.names = T)

print(l)
```



```{r}
for(inputFile in l) {
  message(">> file : ", inputFile)
  df1 <- read.csv(inputFile, encoding = "UTF-8")
  df2 <- correctFile(df1, fields)
  print(nrow(df1) == nrow(df2))
  write.csv(df2, inputFile, fileEncoding = "UTF-8", row.names = F, na = "")
}
```

Ensuite, on fait le test des CSV selon le schéma pour voir si tout va bien :
[](../tester-exemples.bat)

